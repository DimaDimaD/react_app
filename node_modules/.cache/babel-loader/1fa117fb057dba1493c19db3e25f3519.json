{"ast":null,"code":"var _jsxFileName = \"/home/dima/WebstormProjects/react_app/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/App.css';\nimport PostList from \"../components/PostList\";\nimport CreateButton from \"../components/UI/button/CreateButton\";\nimport PostForm from \"../components/PostForm\";\nimport PostFilter from \"../components/PostFilter\";\nimport CreateModal from \"../components/UI/CreateModal/CreateModal\";\nimport { usePosts } from \"../hooks/usePosts\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { getPagesCount } from \"../utils/pages\";\nimport Pagination from \"../components/UI/Pagination/Pagination\";\nimport { usePagination } from \"../hooks/usePagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const lastElement = useRef();\n  const observer = useRef();\n  console.log(lastElement);\n  const [fetchPosts, isPostsLoading, isPostError] = useFetch(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts([...posts, ...response.data]);\n    const totalPosts = response.headers['x-total-count'];\n    setTotalPages(getPagesCount(limit, totalPosts));\n  });\n\n  // let pagesArray = getPagesArr(totalPages);\n  let pagesArray = usePagination(totalPages, limit);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  useEffect(() => {\n    let options = {\n      root: document\n    };\n    const callback = (entries, observer) => {\n      if (isPostsLoading) {\n        return;\n      }\n      if (entries[0].isIntersecting) {\n        setPage(page + 1);\n        console.log(page);\n      }\n    };\n    observer.current = new IntersectionObserver(callback, options);\n    observer.current.observe(lastElement.current);\n  }, [isPostsLoading]);\n  useEffect(() => {\n    fetchPosts();\n  }, [page]);\n  const addPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n  const deletePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CreateButton, {\n      style: {\n        marginTop: 30\n      },\n      onClick: () => setModal(true),\n      children: \"New post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        add: addPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), isPostError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Error: $\", isPostError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: sortedAndSearchedPosts,\n      remove: deletePost,\n      title: 'Posts list:'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement,\n      style: {\n        height: '20px',\n        background: 'red'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), isPostsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '70px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      pagesArray: pagesArray,\n      page: page,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"1TDpSNPuH23eVrm1VscudSjSwII=\", false, function () {\n  return [useFetch, usePagination, usePosts];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useRef","useState","PostList","CreateButton","PostForm","PostFilter","CreateModal","usePosts","PostService","Loader","useFetch","getPagesCount","Pagination","usePagination","Posts","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","lastElement","observer","console","log","fetchPosts","isPostsLoading","isPostError","response","getAll","data","totalPosts","headers","pagesArray","sortedAndSearchedPosts","options","root","document","callback","entries","isIntersecting","current","IntersectionObserver","observe","addPost","newPost","deletePost","post","p","id","marginTop","margin","height","background","display","justifyContent"],"sources":["/home/dima/WebstormProjects/react_app/src/pages/Posts.jsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\n\nimport '../styles/App.css'\nimport PostList from \"../components/PostList\";\nimport CreateButton from \"../components/UI/button/CreateButton\";\nimport PostForm from \"../components/PostForm\";\nimport PostFilter from \"../components/PostFilter\";\nimport CreateModal from \"../components/UI/CreateModal/CreateModal\";\nimport {usePosts} from \"../hooks/usePosts\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport {useFetch} from \"../hooks/useFetch\";\nimport {getPagesCount} from \"../utils/pages\";\nimport Pagination from \"../components/UI/Pagination/Pagination\";\nimport {usePagination} from \"../hooks/usePagination\";\n\n\nfunction Posts() {\n\n    const [posts, setPosts] = useState([]);\n    const [filter, setFilter] = useState({sort: '', query: ''});\n    const [modal, setModal] = useState(false);\n    const [totalPages, setTotalPages] = useState(0);\n    const [limit, setLimit] = useState(10);\n    const [page, setPage] = useState(1);\n\n    const lastElement = useRef();\n    const observer = useRef();\n    console.log(lastElement)\n\n    const [fetchPosts, isPostsLoading, isPostError] = useFetch(async () => {\n        const response = await PostService.getAll(limit, page);\n        setPosts([...posts, ...response.data]);\n        const totalPosts = response.headers['x-total-count'];\n        setTotalPages(getPagesCount(limit, totalPosts));\n    });\n\n    // let pagesArray = getPagesArr(totalPages);\n    let pagesArray = usePagination(totalPages, limit);\n\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n\n    useEffect(() => {\n        let options = {\n            root: document\n        }\n\n        const callback = (entries, observer) => {\n            if (isPostsLoading){\n                return\n            }\n            if (entries[0].isIntersecting){\n                setPage(page + 1)\n                console.log(page)\n            }\n        }\n\n        observer.current = new IntersectionObserver(callback, options);\n        observer.current.observe(lastElement.current)\n\n    }, [isPostsLoading])\n\n    useEffect(() => {\n        fetchPosts()\n    }, [page]);\n\n    const addPost = (newPost) => {\n        setPosts([...posts, newPost]);\n        setModal(false);\n    }\n\n\n    const deletePost = (post) => {\n        setPosts(posts.filter(p =>\n            p.id !== post.id\n        ))\n    }\n\n\n    return (\n        <div className='App'>\n            <CreateButton\n                style={{marginTop: 30}}\n                onClick={() => setModal(true)}\n            >\n                New post\n            </CreateButton>\n            <CreateModal\n                visible={modal}\n                setVisible={setModal}\n            >\n                <PostForm add={addPost} />\n            </CreateModal>\n            <hr style={{margin: '15px 0px'}} />\n            <PostFilter\n                filter={filter}\n                setFilter={setFilter}\n            />\n            {\n                isPostError && <h1>\n                    Error: ${isPostError}\n                </h1>\n            }\n            <PostList\n                posts={sortedAndSearchedPosts}\n                remove={deletePost}\n                title={'Posts list:'}/>\n            <div ref={lastElement} style={{height: '20px', background: 'red'}}></div>\n            {\n                isPostsLoading &&\n                <div style={{display: 'flex', justifyContent: 'center', marginTop: '70px'}}>\n                        <Loader />\n                </div>\n            }\n            <Pagination\n                pagesArray={pagesArray}\n                page={page}\n                setPage={setPage} />\n\n        </div>\n    );\n}\n\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module"}