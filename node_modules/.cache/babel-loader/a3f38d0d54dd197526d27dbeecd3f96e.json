{"ast":null,"code":"var _jsxFileName = \"/home/dima/WebstormProjects/react_app/src/components/AppRouter.jsx\";\nimport React from 'react';\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport About from \"../pages/About\";\nimport Posts from \"../pages/Posts\";\nimport ErrorPage from \"../pages/ErrorPage\";\nimport PostIdPage from \"../pages/PostIdPage\";\nimport { privateRoutes, publicRoutes } from \"../router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  const isAuth = true;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"isAuth ? \", /*#__PURE__*/_jsxDEV(Routes, {\n      children: privateRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        exact: route.exact,\n        element: /*#__PURE__*/_jsxDEV(route.element, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }, this), \": \", /*#__PURE__*/_jsxDEV(Routes, {\n      children: publicRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        exact: route.exact,\n        element: /*#__PURE__*/_jsxDEV(route.element, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","Navigate","Route","Routes","About","Posts","ErrorPage","PostIdPage","privateRoutes","publicRoutes","AppRouter","isAuth","map","route","path","exact"],"sources":["/home/dima/WebstormProjects/react_app/src/components/AppRouter.jsx"],"sourcesContent":["import React from 'react';\nimport {Navigate, Route, Routes} from \"react-router-dom\";\nimport About from \"../pages/About\";\nimport Posts from \"../pages/Posts\";\nimport ErrorPage from \"../pages/ErrorPage\";\nimport PostIdPage from \"../pages/PostIdPage\";\nimport {privateRoutes, publicRoutes,} from \"../router\";\n\nconst AppRouter = () => {\n    const isAuth = true\n    return (\n        <div>\n            isAuth\n            ? <Routes>\n            {privateRoutes.map(route => <Route\n                path={route.path}\n                exact={route.exact}\n                element={<route.element />}\n                />)}\n            </Routes>\n            : <Routes>\n            {publicRoutes.map(route => <Route\n                path={route.path}\n                exact={route.exact}\n                element={<route.element />}\n            />)}\n             </Routes>\n                {/*<Route*/}\n                {/*    path=\"/about\"*/}\n                {/*    element={<About />}*/}\n                {/*/>*/}\n                {/*<Route*/}\n                {/*    exact path=\"/posts\"*/}\n                {/*    element={<Posts />}*/}\n                {/*/>*/}\n                {/*<Route*/}\n                {/*    path='/posts/:id'*/}\n                {/*    element={<PostIdPage />}*/}\n                {/*/>*/}\n                {/*<Route*/}\n                {/*    path=\"/error\"*/}\n                {/*    element={<ErrorPage />}*/}\n                {/*/>*/}\n                {/*<Route*/}\n                {/*    path=\"/\"*/}\n                {/*    element={<Navigate to=\"/about\" />}*/}\n                {/*/>*/}\n                {/*<Route*/}\n                {/*    path=\"*\"*/}\n                {/*    element={<Navigate to=\"/error\" />}*/}\n                {/*/>*/}\n\n        </div>\n    );\n};\n\nexport default AppRouter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AACxD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,SAAQC,aAAa,EAAEC,YAAY,QAAQ,WAAW;AAAC;AAEvD,MAAMC,SAAS,GAAG,MAAM;EACpB,MAAMC,MAAM,GAAG,IAAI;EACnB,oBACI;IAAA,qCAEM,QAAC,MAAM;MAAA,UACRH,aAAa,CAACI,GAAG,CAACC,KAAK,iBAAI,QAAC,KAAK;QAC9B,IAAI,EAAEA,KAAK,CAACC,IAAK;QACjB,KAAK,EAAED,KAAK,CAACE,KAAM;QACnB,OAAO,eAAE,QAAC,KAAK,CAAC,OAAO;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QACzB;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,qBACP,QAAC,MAAM;MAAA,UACRN,YAAY,CAACG,GAAG,CAACC,KAAK,iBAAI,QAAC,KAAK;QAC7B,IAAI,EAAEA,KAAK,CAACC,IAAK;QACjB,KAAK,EAAED,KAAK,CAACE,KAAM;QACnB,OAAO,eAAE,QAAC,KAAK,CAAC,OAAO;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAC7B;IAAC;MAAA;MAAA;MAAA;IAAA,QACO;EAAA;IAAA;IAAA;IAAA;EAAA,QA0BR;AAEd,CAAC;AAAC,KA9CIL,SAAS;AAgDf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}