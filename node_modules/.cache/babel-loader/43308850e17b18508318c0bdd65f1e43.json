{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport const useFetch = callback => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState('');\n  const fetching = async () => {\n    try {\n      setIsLoading(true);\n      await callback();\n    } catch (e) {\n      setIsError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return [fetching, isLoading, isError];\n};\n_s(useFetch, \"c7hkvwMSUXLX/QxNzhSsJ7PzlGQ=\");","map":{"version":3,"names":["useState","useFetch","callback","isLoading","setIsLoading","isError","setIsError","fetching","e","message"],"sources":["/home/dima/WebstormProjects/react_app/src/hooks/useFetch.js"],"sourcesContent":["import {useState} from \"react\";\n\nexport const useFetch = (callback) => {\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState('');\n\n    const fetching = async () => {\n        try {\n            setIsLoading(true);\n            await callback()\n        } catch (e) {\n            setIsError(e.message);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    return [fetching, isLoading, isError];\n}"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,OAAO,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;EAAA;EAElC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMO,QAAQ,GAAG,YAAY;IACzB,IAAI;MACAH,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMF,QAAQ,EAAE;IACpB,CAAC,CAAC,OAAOM,CAAC,EAAE;MACRF,UAAU,CAACE,CAAC,CAACC,OAAO,CAAC;IACzB,CAAC,SAAS;MACNL,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO,CAACG,QAAQ,EAAEJ,SAAS,EAAEE,OAAO,CAAC;AACzC,CAAC;AAAA,GAjBYJ,QAAQ"},"metadata":{},"sourceType":"module"}