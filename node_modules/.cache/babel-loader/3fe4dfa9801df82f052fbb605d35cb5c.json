{"ast":null,"code":"var _jsxFileName = \"/home/dima/WebstormProjects/react_app/src/pages/PostIdPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport PostService from \"../API/PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostIdPage = () => {\n  _s();\n  const params = useParams();\n  const [post, setPost] = useState(null);\n  const [fetchById, isLoading, error] = useFetch(async id => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  useEffect(() => {\n    fetchById(params.id);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Post \", params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(PostIdPage, \"+JU/BmKJiRPK5Z6pms6nTHWZz6U=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = PostIdPage;\nexport default PostIdPage;\nvar _c;\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useFetch","PostService","PostIdPage","params","post","setPost","fetchById","isLoading","error","id","response","getById","data","title"],"sources":["/home/dima/WebstormProjects/react_app/src/pages/PostIdPage.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport {useFetch} from \"../hooks/useFetch\";\nimport PostService from \"../API/PostService\";\n\nconst PostIdPage = () => {\n\n    const params = useParams();\n    const [post, setPost] = useState(null)\n    const [fetchById, isLoading, error] = useFetch(async (id) => {\n        const response = await PostService.getById(id);\n        setPost(response.data)\n    });\n\n    useEffect(() => {\n        fetchById(params.id)\n    })\n\n    return (\n        <div>\n            <h1>Post {params.id}</h1>\n            <div>{post.title}</div>\n        </div>\n    );\n};\n\nexport default PostIdPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAAQC,QAAQ,QAAO,mBAAmB;AAC1C,OAAOC,WAAW,MAAM,oBAAoB;AAAC;AAE7C,MAAMC,UAAU,GAAG,MAAM;EAAA;EAErB,MAAMC,MAAM,GAAGJ,SAAS,EAAE;EAC1B,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,SAAS,EAAEC,KAAK,CAAC,GAAGR,QAAQ,CAAC,MAAOS,EAAE,IAAK;IACzD,MAAMC,QAAQ,GAAG,MAAMT,WAAW,CAACU,OAAO,CAACF,EAAE,CAAC;IAC9CJ,OAAO,CAACK,QAAQ,CAACE,IAAI,CAAC;EAC1B,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACZS,SAAS,CAACH,MAAM,CAACM,EAAE,CAAC;EACxB,CAAC,CAAC;EAEF,oBACI;IAAA,wBACI;MAAA,oBAAUN,MAAM,CAACM,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACzB;MAAA,UAAML,IAAI,CAACS;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACrB;AAEd,CAAC;AAAC,GAnBIX,UAAU;EAAA,QAEGH,SAAS,EAEcC,QAAQ;AAAA;AAAA,KAJ5CE,UAAU;AAqBhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}